//Написати функцію, яка поверне всі числа які зустрічаються в масиві  тільки 2 рази(дублікат),якщо число зустрічається 1 раз або 3 і більше - воно не підходить.

const arr = [1,2,6,3,3,3,6,1,4,5,2,3];

const getOnlyDuplicates = (arr = []) => {
    const numCount = {};

    for (const num of arr) {
        if (numCount[num]) {
            numCount[num]++;
        } else {
            numCount[num] = 1;
        }
    }

    const duplicates = [];

    for (const num in numCount) {
        if (numCount[num] === 2) {
            duplicates.push(parseInt(num));
        }
    }

    return duplicates;
};

const result = getOnlyDuplicates(arr);
console.log(result);  // [6, 1, 2]

//АНАЛІЗ РОЗВ'ЯЗКУ
//• Для початку маємо масив чисел arr, який хочемо перевірити на наявність дублікатів.
//• Створюємо порожній об'єкт numCount, який буде зберігати в собі кількість перевірених чисел в масиві. Кожний ключ об'єкта буде числом з масиву, а значенням буде кількість разів, яку це число зустрічається у масиві.
//• Далі перебираємо масив arr за допомогою циклу for...of. Для кожного числа з масиву перевіряємо, чи вже існує ключ з таким числом у об'єкті numCount. Якщо такий ключ існує, то збільшуємо його значення на 1, щоб підрахувати, що вже зустріли це число ще раз. Якщо ключ не існує - створюємо його зі значенням 1, оскільки це перше зустрічання цього числа.
//• Після того, як пройшлися по всіх числах у масиві та підрахували їхню кількість, переходимо до наступного кроку - створюємо порожній масив duplicates, який буде використовуватися для збереження чисел, які зустрічаються рівно 2 рази.
//• Далі перебираємо всі ключі об'єкта numCount (це числа з масиву) за допомогою циклу for...in. Для кожного числа перевіряємо, чи його кількість дорівнює 2. Якщо так, то це число зустрічається рівно 2 рази, тоді додаємо його до масиву duplicates за допомогою методу push.
//• На завершення функція повертає масив duplicates, який містить числа, які зустрічаються рівно 2 рази у вхідному масиві arr.
//Отже, результатом роботи цієї функції буде масив, який містить лише ті числа з вхідного масиву, які зустрічаються рівно 2 рази. У моєму прикладі це числа 6, 1, 2.

//ЧОМУ ОБРАЛИ ЦЮ ЗАДАЧУ
//• Використання об'єкта для збереження інформації: Вирішення цієї задачі включає в себе використання об'єкта для збереження кількості зустрічаних чисел у масиві. Це дозволяє використовувати структуру даних для ефективного вирішення задачі та отримання необхідного результату.
//• Використання циклів. Задача демонструє використання циклів for...of і for...in для обробки даних у масиві та об'єкті.
//• Фільтрація даних. Вивчаємо, як можна фільтрувати дані з масиву на основі певних умов. У цьому випадку, шукаємо числа, які зустрічаються рівно 2 рази, і відкидаємо ті, які зустрічаються 1 раз або 3 і більше разів.
//• Можливість знаходити і видаляти дублікати важлива в реальних програмах, коли вам потрібно обробити дані, які містять дублікати або ненаявність деяких значень.
